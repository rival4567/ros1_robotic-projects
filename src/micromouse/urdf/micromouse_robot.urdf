<?xml version="1.0"?>
<robot name="micromouse" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Constants for robot -->
    <xacro:property name="rotation_90" value="1.57079632679"/>
    <xacro:property name="scale_chassis" value="0.25"/>
    <xacro:property name="scale_wheel" value="0.03"/>
    <xacro:property name="mass_chassis" value="1.2"/>
    <xacro:property name="mass_wheel" value="0.3"/>
    <xacro:property name="mass_castor" value="0.2"/>
    <xacro:property name="radius_castor" value="0.0075"/>
    <xacro:property name="wheel_pos_x" value="0.026"/>
    <xacro:property name="wheel_pos_y" value="-0.016"/>
    <xacro:property name="castor_pos_y" value="0.025"/>
    
    <xacro:macro name="wheel_link" params="name">
        <link name="${name}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="0.0 ${rotation_90} 0.0"/>
                <geometry>
                    <mesh filename="package://micromouse/models/wheel/micromouse_wheel.obj" scale="${scale_wheel} ${scale_wheel} ${scale_wheel}"/>
                </geometry>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0.0 ${rotation_90} 0.0"/>
                <geometry>
                    <mesh filename="package://micromouse/models/wheel/micromouse_wheel.obj" scale="${scale_wheel} ${scale_wheel} ${scale_wheel}"/>
                </geometry>
            </collision>
            <inertial>
                <mass value="${mass_wheel}" />
                <inertia ixx="0.000305" ixy="0.0032" ixz="0.0" iyy="0.009" iyz="8e-6" izz="0.00031" />
            </inertial>
        </link>
    </xacro:macro>

    
    <link name="base_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="${rotation_90} 0.0 0.0"/>
            <geometry>
                <mesh filename="package://micromouse/models/chassis/micromouse.obj" scale="${scale_chassis} ${scale_chassis} ${scale_chassis}"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="${rotation_90} 0.0 0.0"/>
            <geometry>
                <mesh filename="package://micromouse/models/chassis/micromouse.obj" scale="${scale_chassis} ${scale_chassis} ${scale_chassis}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="${mass_chassis}" />
            <inertia ixx="0.012" ixy="1.5e-6" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.12" />
        </inertial>
    </link>

    <xacro:wheel_link name="left"/>
    <xacro:wheel_link name="right"/>

    <link name="castor_link">
        <visual>
            <geometry>
                <sphere radius="${radius_castor}"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${radius_castor}"/>
            </geometry>
            <inertial>
                <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
                <mass value="${mass_castor}"/>
                <inertia ixx="0.002" ixy="0.0" ixz="0.0" iyy="0.002" iyz="0.0" izz="0.002"/>
            </inertial>
        </collision>
    </link>
    <joint name="left_wheel" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel_link"/>
        <axis xyz="1 0 0"/>
        <origin xyz="${wheel_pos_x} ${wheel_pos_y} 0.0" rpy="0 0 0"/>
    </joint>
    <joint name="right_wheel" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel_link"/>
        <axis xyz="1 0 0"/>
        <origin xyz="-${wheel_pos_x} ${wheel_pos_y} 0.0" rpy="0 0 0"/>
    </joint>
    <joint name="castor_wheel" type="fixed">
        <parent link="base_link"/>
        <child link="castor_link"/>
        <origin xyz="0 ${castor_pos_y} -0.006"/>
    </joint>

    <!-- Transmission is important to link the joints and the controller -->
    <transmission name="left_wheel_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="left_wheel">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="left_wheel_motor">
            <hardwareInterface>EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="right_wheel_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="right_wheel">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="right_wheel_motor">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <!-- SENSORS -->

    <!-- Differential drive controller  -->
    <gazebo>
        <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
            <rosDebugLevel>Debug</rosDebugLevel>
            <publishWheelTF>True</publishWheelTF>
            <publishTf>1</publishTf>
            <publishWheelJointState>true</publishWheelJointState>
            <alwaysOn>true</alwaysOn>
            <updateRate>100.0</updateRate>
            <leftJoint>left_wheel</leftJoint>
            <rightJoint>right_wheel</rightJoint>
            <wheelSeparation>${2*wheel_pos_x}</wheelSeparation>
            <wheelDiameter>${2*radius_castor}</wheelDiameter>
            <broadcastTF>1</broadcastTF>
            <wheelTorque>30</wheelTorque>
            <wheelAcceleration>1.8</wheelAcceleration>
            <commandTopic>cmd_vel</commandTopic>
            <odometryFrame>odom</odometryFrame>
            <odometryTopic>odom</odometryTopic>
            <robotBaseFrame>base_link</robotBaseFrame>
        </plugin>
    </gazebo>

    <!-- Gazebo plugin for ROS Control -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/</robotNamespace>
        </plugin>
    </gazebo>
</robot>